'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.296
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
'
Namespace WebReference
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WorkflowServiceForXYDBHttpBinding", [Namespace]:="webservices.services.weaver.com.cn")>  _
    Partial Public Class WorkflowServiceForXYDB
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private deleteRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitWorkflowRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getToDoWorkflowRequestCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private doCreateWorkflowRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCreateWorkflowRequestInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllWorkflowRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMyWorkflowRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProcessedWorkflowRequestCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getWorkflowRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLeaveDaysOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getWorkflowRequest4splitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getHendledWorkflowRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCreateWorkflowCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getToDoWorkflowRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getWorkflowNewFlagOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCCWorkflowRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCreateWorkflowListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCCWorkflowRequestCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllWorkflowRequestCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getWorkflowRequestLogsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMyWorkflowRequestCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProcessedWorkflowRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCreateWorkflowTypeCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private forwardWorkflowRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private writeWorkflowReadFlagOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getHendledWorkflowRequestCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCreateWorkflowTypeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ServerClient.My.MySettings.Default.ServerClient_WebReference_WorkflowServiceForXYDB
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event deleteRequestCompleted As deleteRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event submitWorkflowRequestCompleted As submitWorkflowRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event getToDoWorkflowRequestCountCompleted As getToDoWorkflowRequestCountCompletedEventHandler
        
        '''<remarks/>
        Public Event doCreateWorkflowRequestCompleted As doCreateWorkflowRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event getCreateWorkflowRequestInfoCompleted As getCreateWorkflowRequestInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllWorkflowRequestListCompleted As getAllWorkflowRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event getMyWorkflowRequestListCompleted As getMyWorkflowRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event getProcessedWorkflowRequestCountCompleted As getProcessedWorkflowRequestCountCompletedEventHandler
        
        '''<remarks/>
        Public Event getWorkflowRequestCompleted As getWorkflowRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event getLeaveDaysCompleted As getLeaveDaysCompletedEventHandler
        
        '''<remarks/>
        Public Event getWorkflowRequest4splitCompleted As getWorkflowRequest4splitCompletedEventHandler
        
        '''<remarks/>
        Public Event getHendledWorkflowRequestListCompleted As getHendledWorkflowRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event getCreateWorkflowCountCompleted As getCreateWorkflowCountCompletedEventHandler
        
        '''<remarks/>
        Public Event getToDoWorkflowRequestListCompleted As getToDoWorkflowRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event getWorkflowNewFlagCompleted As getWorkflowNewFlagCompletedEventHandler
        
        '''<remarks/>
        Public Event getCCWorkflowRequestListCompleted As getCCWorkflowRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event getCreateWorkflowListCompleted As getCreateWorkflowListCompletedEventHandler
        
        '''<remarks/>
        Public Event getCCWorkflowRequestCountCompleted As getCCWorkflowRequestCountCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllWorkflowRequestCountCompleted As getAllWorkflowRequestCountCompletedEventHandler
        
        '''<remarks/>
        Public Event getWorkflowRequestLogsCompleted As getWorkflowRequestLogsCompletedEventHandler
        
        '''<remarks/>
        Public Event getMyWorkflowRequestCountCompleted As getMyWorkflowRequestCountCompletedEventHandler
        
        '''<remarks/>
        Public Event getProcessedWorkflowRequestListCompleted As getProcessedWorkflowRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event getCreateWorkflowTypeCountCompleted As getCreateWorkflowTypeCountCompletedEventHandler
        
        '''<remarks/>
        Public Event forwardWorkflowRequestCompleted As forwardWorkflowRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event writeWorkflowReadFlagCompleted As writeWorkflowReadFlagCompletedEventHandler
        
        '''<remarks/>
        Public Event getHendledWorkflowRequestCountCompleted As getHendledWorkflowRequestCountCompletedEventHandler
        
        '''<remarks/>
        Public Event getCreateWorkflowTypeListCompleted As getCreateWorkflowTypeListCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function deleteRequest(ByVal in0 As Integer, ByVal in1 As Integer) As <System.Xml.Serialization.XmlElementAttribute("out")> Boolean
            Dim results() As Object = Me.Invoke("deleteRequest", New Object() {in0, in1})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub deleteRequestAsync(ByVal in0 As Integer, ByVal in1 As Integer)
            Me.deleteRequestAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteRequestAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal userState As Object)
            If (Me.deleteRequestOperationCompleted Is Nothing) Then
                Me.deleteRequestOperationCompleted = AddressOf Me.OndeleteRequestOperationCompleted
            End If
            Me.InvokeAsync("deleteRequest", New Object() {in0, in1}, Me.deleteRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteRequestCompleted(Me, New deleteRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function submitWorkflowRequest(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in0 As WorkflowRequestInfo, ByVal in1 As Integer, ByVal in2 As Integer, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in3 As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in4 As String) As <System.Xml.Serialization.XmlElementAttribute("out", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("submitWorkflowRequest", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitWorkflowRequestAsync(ByVal in0 As WorkflowRequestInfo, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As String, ByVal in4 As String)
            Me.submitWorkflowRequestAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitWorkflowRequestAsync(ByVal in0 As WorkflowRequestInfo, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As String, ByVal in4 As String, ByVal userState As Object)
            If (Me.submitWorkflowRequestOperationCompleted Is Nothing) Then
                Me.submitWorkflowRequestOperationCompleted = AddressOf Me.OnsubmitWorkflowRequestOperationCompleted
            End If
            Me.InvokeAsync("submitWorkflowRequest", New Object() {in0, in1, in2, in3, in4}, Me.submitWorkflowRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitWorkflowRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.submitWorkflowRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitWorkflowRequestCompleted(Me, New submitWorkflowRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getToDoWorkflowRequestCount(ByVal in0 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in1() As String) As <System.Xml.Serialization.XmlElementAttribute("out")> Integer
            Dim results() As Object = Me.Invoke("getToDoWorkflowRequestCount", New Object() {in0, in1})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getToDoWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String)
            Me.getToDoWorkflowRequestCountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getToDoWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String, ByVal userState As Object)
            If (Me.getToDoWorkflowRequestCountOperationCompleted Is Nothing) Then
                Me.getToDoWorkflowRequestCountOperationCompleted = AddressOf Me.OngetToDoWorkflowRequestCountOperationCompleted
            End If
            Me.InvokeAsync("getToDoWorkflowRequestCount", New Object() {in0, in1}, Me.getToDoWorkflowRequestCountOperationCompleted, userState)
        End Sub
        
        Private Sub OngetToDoWorkflowRequestCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.getToDoWorkflowRequestCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getToDoWorkflowRequestCountCompleted(Me, New getToDoWorkflowRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function doCreateWorkflowRequest(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in0 As WorkflowRequestInfo, ByVal in1 As Integer) As <System.Xml.Serialization.XmlElementAttribute("out", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("doCreateWorkflowRequest", New Object() {in0, in1})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub doCreateWorkflowRequestAsync(ByVal in0 As WorkflowRequestInfo, ByVal in1 As Integer)
            Me.doCreateWorkflowRequestAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doCreateWorkflowRequestAsync(ByVal in0 As WorkflowRequestInfo, ByVal in1 As Integer, ByVal userState As Object)
            If (Me.doCreateWorkflowRequestOperationCompleted Is Nothing) Then
                Me.doCreateWorkflowRequestOperationCompleted = AddressOf Me.OndoCreateWorkflowRequestOperationCompleted
            End If
            Me.InvokeAsync("doCreateWorkflowRequest", New Object() {in0, in1}, Me.doCreateWorkflowRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OndoCreateWorkflowRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.doCreateWorkflowRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent doCreateWorkflowRequestCompleted(Me, New doCreateWorkflowRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCreateWorkflowRequestInfo(ByVal in0 As Integer, ByVal in1 As Integer) As <System.Xml.Serialization.XmlElementAttribute("out", IsNullable:=true)> WorkflowRequestInfo
            Dim results() As Object = Me.Invoke("getCreateWorkflowRequestInfo", New Object() {in0, in1})
            Return CType(results(0),WorkflowRequestInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowRequestInfoAsync(ByVal in0 As Integer, ByVal in1 As Integer)
            Me.getCreateWorkflowRequestInfoAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowRequestInfoAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal userState As Object)
            If (Me.getCreateWorkflowRequestInfoOperationCompleted Is Nothing) Then
                Me.getCreateWorkflowRequestInfoOperationCompleted = AddressOf Me.OngetCreateWorkflowRequestInfoOperationCompleted
            End If
            Me.InvokeAsync("getCreateWorkflowRequestInfo", New Object() {in0, in1}, Me.getCreateWorkflowRequestInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCreateWorkflowRequestInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCreateWorkflowRequestInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCreateWorkflowRequestInfoCompleted(Me, New getCreateWorkflowRequestInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllWorkflowRequestList(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in4() As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowRequestInfo()
            Dim results() As Object = Me.Invoke("getAllWorkflowRequestList", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),WorkflowRequestInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String)
            Me.getAllWorkflowRequestListAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String, ByVal userState As Object)
            If (Me.getAllWorkflowRequestListOperationCompleted Is Nothing) Then
                Me.getAllWorkflowRequestListOperationCompleted = AddressOf Me.OngetAllWorkflowRequestListOperationCompleted
            End If
            Me.InvokeAsync("getAllWorkflowRequestList", New Object() {in0, in1, in2, in3, in4}, Me.getAllWorkflowRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllWorkflowRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllWorkflowRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllWorkflowRequestListCompleted(Me, New getAllWorkflowRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMyWorkflowRequestList(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in4() As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowRequestInfo()
            Dim results() As Object = Me.Invoke("getMyWorkflowRequestList", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),WorkflowRequestInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMyWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String)
            Me.getMyWorkflowRequestListAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMyWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String, ByVal userState As Object)
            If (Me.getMyWorkflowRequestListOperationCompleted Is Nothing) Then
                Me.getMyWorkflowRequestListOperationCompleted = AddressOf Me.OngetMyWorkflowRequestListOperationCompleted
            End If
            Me.InvokeAsync("getMyWorkflowRequestList", New Object() {in0, in1, in2, in3, in4}, Me.getMyWorkflowRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMyWorkflowRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMyWorkflowRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMyWorkflowRequestListCompleted(Me, New getMyWorkflowRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getProcessedWorkflowRequestCount(ByVal in0 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in1() As String) As <System.Xml.Serialization.XmlElementAttribute("out")> Integer
            Dim results() As Object = Me.Invoke("getProcessedWorkflowRequestCount", New Object() {in0, in1})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProcessedWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String)
            Me.getProcessedWorkflowRequestCountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProcessedWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String, ByVal userState As Object)
            If (Me.getProcessedWorkflowRequestCountOperationCompleted Is Nothing) Then
                Me.getProcessedWorkflowRequestCountOperationCompleted = AddressOf Me.OngetProcessedWorkflowRequestCountOperationCompleted
            End If
            Me.InvokeAsync("getProcessedWorkflowRequestCount", New Object() {in0, in1}, Me.getProcessedWorkflowRequestCountOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProcessedWorkflowRequestCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProcessedWorkflowRequestCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProcessedWorkflowRequestCountCompleted(Me, New getProcessedWorkflowRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getWorkflowRequest(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer) As <System.Xml.Serialization.XmlElementAttribute("out", IsNullable:=true)> WorkflowRequestInfo
            Dim results() As Object = Me.Invoke("getWorkflowRequest", New Object() {in0, in1, in2})
            Return CType(results(0),WorkflowRequestInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getWorkflowRequestAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer)
            Me.getWorkflowRequestAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getWorkflowRequestAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal userState As Object)
            If (Me.getWorkflowRequestOperationCompleted Is Nothing) Then
                Me.getWorkflowRequestOperationCompleted = AddressOf Me.OngetWorkflowRequestOperationCompleted
            End If
            Me.InvokeAsync("getWorkflowRequest", New Object() {in0, in1, in2}, Me.getWorkflowRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OngetWorkflowRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.getWorkflowRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getWorkflowRequestCompleted(Me, New getWorkflowRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLeaveDays(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in0 As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in1 As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in2 As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in3 As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in4 As String) As <System.Xml.Serialization.XmlElementAttribute("out", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("getLeaveDays", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLeaveDaysAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal in3 As String, ByVal in4 As String)
            Me.getLeaveDaysAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLeaveDaysAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal in3 As String, ByVal in4 As String, ByVal userState As Object)
            If (Me.getLeaveDaysOperationCompleted Is Nothing) Then
                Me.getLeaveDaysOperationCompleted = AddressOf Me.OngetLeaveDaysOperationCompleted
            End If
            Me.InvokeAsync("getLeaveDays", New Object() {in0, in1, in2, in3, in4}, Me.getLeaveDaysOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLeaveDaysOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLeaveDaysCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLeaveDaysCompleted(Me, New getLeaveDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getWorkflowRequest4split(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer) As <System.Xml.Serialization.XmlElementAttribute("out", IsNullable:=true)> WorkflowRequestInfo
            Dim results() As Object = Me.Invoke("getWorkflowRequest4split", New Object() {in0, in1, in2, in3})
            Return CType(results(0),WorkflowRequestInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getWorkflowRequest4splitAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer)
            Me.getWorkflowRequest4splitAsync(in0, in1, in2, in3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getWorkflowRequest4splitAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal userState As Object)
            If (Me.getWorkflowRequest4splitOperationCompleted Is Nothing) Then
                Me.getWorkflowRequest4splitOperationCompleted = AddressOf Me.OngetWorkflowRequest4splitOperationCompleted
            End If
            Me.InvokeAsync("getWorkflowRequest4split", New Object() {in0, in1, in2, in3}, Me.getWorkflowRequest4splitOperationCompleted, userState)
        End Sub
        
        Private Sub OngetWorkflowRequest4splitOperationCompleted(ByVal arg As Object)
            If (Not (Me.getWorkflowRequest4splitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getWorkflowRequest4splitCompleted(Me, New getWorkflowRequest4splitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getHendledWorkflowRequestList(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in4() As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowRequestInfo()
            Dim results() As Object = Me.Invoke("getHendledWorkflowRequestList", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),WorkflowRequestInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getHendledWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String)
            Me.getHendledWorkflowRequestListAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getHendledWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String, ByVal userState As Object)
            If (Me.getHendledWorkflowRequestListOperationCompleted Is Nothing) Then
                Me.getHendledWorkflowRequestListOperationCompleted = AddressOf Me.OngetHendledWorkflowRequestListOperationCompleted
            End If
            Me.InvokeAsync("getHendledWorkflowRequestList", New Object() {in0, in1, in2, in3, in4}, Me.getHendledWorkflowRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetHendledWorkflowRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getHendledWorkflowRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getHendledWorkflowRequestListCompleted(Me, New getHendledWorkflowRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCreateWorkflowCount(ByVal in0 As Integer, ByVal in1 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in2() As String) As <System.Xml.Serialization.XmlElementAttribute("out")> Integer
            Dim results() As Object = Me.Invoke("getCreateWorkflowCount", New Object() {in0, in1, in2})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowCountAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2() As String)
            Me.getCreateWorkflowCountAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowCountAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2() As String, ByVal userState As Object)
            If (Me.getCreateWorkflowCountOperationCompleted Is Nothing) Then
                Me.getCreateWorkflowCountOperationCompleted = AddressOf Me.OngetCreateWorkflowCountOperationCompleted
            End If
            Me.InvokeAsync("getCreateWorkflowCount", New Object() {in0, in1, in2}, Me.getCreateWorkflowCountOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCreateWorkflowCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCreateWorkflowCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCreateWorkflowCountCompleted(Me, New getCreateWorkflowCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getToDoWorkflowRequestList(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in4() As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowRequestInfo()
            Dim results() As Object = Me.Invoke("getToDoWorkflowRequestList", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),WorkflowRequestInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getToDoWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String)
            Me.getToDoWorkflowRequestListAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getToDoWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String, ByVal userState As Object)
            If (Me.getToDoWorkflowRequestListOperationCompleted Is Nothing) Then
                Me.getToDoWorkflowRequestListOperationCompleted = AddressOf Me.OngetToDoWorkflowRequestListOperationCompleted
            End If
            Me.InvokeAsync("getToDoWorkflowRequestList", New Object() {in0, in1, in2, in3, in4}, Me.getToDoWorkflowRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetToDoWorkflowRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getToDoWorkflowRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getToDoWorkflowRequestListCompleted(Me, New getToDoWorkflowRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getWorkflowNewFlag(<System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in0() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in1 As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("getWorkflowNewFlag", New Object() {in0, in1})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getWorkflowNewFlagAsync(ByVal in0() As String, ByVal in1 As String)
            Me.getWorkflowNewFlagAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getWorkflowNewFlagAsync(ByVal in0() As String, ByVal in1 As String, ByVal userState As Object)
            If (Me.getWorkflowNewFlagOperationCompleted Is Nothing) Then
                Me.getWorkflowNewFlagOperationCompleted = AddressOf Me.OngetWorkflowNewFlagOperationCompleted
            End If
            Me.InvokeAsync("getWorkflowNewFlag", New Object() {in0, in1}, Me.getWorkflowNewFlagOperationCompleted, userState)
        End Sub
        
        Private Sub OngetWorkflowNewFlagOperationCompleted(ByVal arg As Object)
            If (Not (Me.getWorkflowNewFlagCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getWorkflowNewFlagCompleted(Me, New getWorkflowNewFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCCWorkflowRequestList(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in4() As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowRequestInfo()
            Dim results() As Object = Me.Invoke("getCCWorkflowRequestList", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),WorkflowRequestInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCCWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String)
            Me.getCCWorkflowRequestListAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCCWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String, ByVal userState As Object)
            If (Me.getCCWorkflowRequestListOperationCompleted Is Nothing) Then
                Me.getCCWorkflowRequestListOperationCompleted = AddressOf Me.OngetCCWorkflowRequestListOperationCompleted
            End If
            Me.InvokeAsync("getCCWorkflowRequestList", New Object() {in0, in1, in2, in3, in4}, Me.getCCWorkflowRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCCWorkflowRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCCWorkflowRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCCWorkflowRequestListCompleted(Me, New getCCWorkflowRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCreateWorkflowList(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in5() As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowBaseInfo()
            Dim results() As Object = Me.Invoke("getCreateWorkflowList", New Object() {in0, in1, in2, in3, in4, in5})
            Return CType(results(0),WorkflowBaseInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4 As Integer, ByVal in5() As String)
            Me.getCreateWorkflowListAsync(in0, in1, in2, in3, in4, in5, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4 As Integer, ByVal in5() As String, ByVal userState As Object)
            If (Me.getCreateWorkflowListOperationCompleted Is Nothing) Then
                Me.getCreateWorkflowListOperationCompleted = AddressOf Me.OngetCreateWorkflowListOperationCompleted
            End If
            Me.InvokeAsync("getCreateWorkflowList", New Object() {in0, in1, in2, in3, in4, in5}, Me.getCreateWorkflowListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCreateWorkflowListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCreateWorkflowListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCreateWorkflowListCompleted(Me, New getCreateWorkflowListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCCWorkflowRequestCount(ByVal in0 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in1() As String) As <System.Xml.Serialization.XmlElementAttribute("out")> Integer
            Dim results() As Object = Me.Invoke("getCCWorkflowRequestCount", New Object() {in0, in1})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCCWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String)
            Me.getCCWorkflowRequestCountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCCWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String, ByVal userState As Object)
            If (Me.getCCWorkflowRequestCountOperationCompleted Is Nothing) Then
                Me.getCCWorkflowRequestCountOperationCompleted = AddressOf Me.OngetCCWorkflowRequestCountOperationCompleted
            End If
            Me.InvokeAsync("getCCWorkflowRequestCount", New Object() {in0, in1}, Me.getCCWorkflowRequestCountOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCCWorkflowRequestCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCCWorkflowRequestCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCCWorkflowRequestCountCompleted(Me, New getCCWorkflowRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllWorkflowRequestCount(ByVal in0 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in1() As String) As <System.Xml.Serialization.XmlElementAttribute("out")> Integer
            Dim results() As Object = Me.Invoke("getAllWorkflowRequestCount", New Object() {in0, in1})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String)
            Me.getAllWorkflowRequestCountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String, ByVal userState As Object)
            If (Me.getAllWorkflowRequestCountOperationCompleted Is Nothing) Then
                Me.getAllWorkflowRequestCountOperationCompleted = AddressOf Me.OngetAllWorkflowRequestCountOperationCompleted
            End If
            Me.InvokeAsync("getAllWorkflowRequestCount", New Object() {in0, in1}, Me.getAllWorkflowRequestCountOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllWorkflowRequestCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllWorkflowRequestCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllWorkflowRequestCountCompleted(Me, New getAllWorkflowRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getWorkflowRequestLogs(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in0 As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in1 As String, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4 As Integer) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowRequestLog()
            Dim results() As Object = Me.Invoke("getWorkflowRequestLogs", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),WorkflowRequestLog())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getWorkflowRequestLogsAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4 As Integer)
            Me.getWorkflowRequestLogsAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getWorkflowRequestLogsAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4 As Integer, ByVal userState As Object)
            If (Me.getWorkflowRequestLogsOperationCompleted Is Nothing) Then
                Me.getWorkflowRequestLogsOperationCompleted = AddressOf Me.OngetWorkflowRequestLogsOperationCompleted
            End If
            Me.InvokeAsync("getWorkflowRequestLogs", New Object() {in0, in1, in2, in3, in4}, Me.getWorkflowRequestLogsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetWorkflowRequestLogsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getWorkflowRequestLogsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getWorkflowRequestLogsCompleted(Me, New getWorkflowRequestLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMyWorkflowRequestCount(ByVal in0 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in1() As String) As <System.Xml.Serialization.XmlElementAttribute("out")> Integer
            Dim results() As Object = Me.Invoke("getMyWorkflowRequestCount", New Object() {in0, in1})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMyWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String)
            Me.getMyWorkflowRequestCountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMyWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String, ByVal userState As Object)
            If (Me.getMyWorkflowRequestCountOperationCompleted Is Nothing) Then
                Me.getMyWorkflowRequestCountOperationCompleted = AddressOf Me.OngetMyWorkflowRequestCountOperationCompleted
            End If
            Me.InvokeAsync("getMyWorkflowRequestCount", New Object() {in0, in1}, Me.getMyWorkflowRequestCountOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMyWorkflowRequestCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMyWorkflowRequestCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMyWorkflowRequestCountCompleted(Me, New getMyWorkflowRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getProcessedWorkflowRequestList(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in4() As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowRequestInfo()
            Dim results() As Object = Me.Invoke("getProcessedWorkflowRequestList", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),WorkflowRequestInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProcessedWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String)
            Me.getProcessedWorkflowRequestListAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProcessedWorkflowRequestListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String, ByVal userState As Object)
            If (Me.getProcessedWorkflowRequestListOperationCompleted Is Nothing) Then
                Me.getProcessedWorkflowRequestListOperationCompleted = AddressOf Me.OngetProcessedWorkflowRequestListOperationCompleted
            End If
            Me.InvokeAsync("getProcessedWorkflowRequestList", New Object() {in0, in1, in2, in3, in4}, Me.getProcessedWorkflowRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProcessedWorkflowRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProcessedWorkflowRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProcessedWorkflowRequestListCompleted(Me, New getProcessedWorkflowRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCreateWorkflowTypeCount(ByVal in0 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in1() As String) As <System.Xml.Serialization.XmlElementAttribute("out")> Integer
            Dim results() As Object = Me.Invoke("getCreateWorkflowTypeCount", New Object() {in0, in1})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowTypeCountAsync(ByVal in0 As Integer, ByVal in1() As String)
            Me.getCreateWorkflowTypeCountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowTypeCountAsync(ByVal in0 As Integer, ByVal in1() As String, ByVal userState As Object)
            If (Me.getCreateWorkflowTypeCountOperationCompleted Is Nothing) Then
                Me.getCreateWorkflowTypeCountOperationCompleted = AddressOf Me.OngetCreateWorkflowTypeCountOperationCompleted
            End If
            Me.InvokeAsync("getCreateWorkflowTypeCount", New Object() {in0, in1}, Me.getCreateWorkflowTypeCountOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCreateWorkflowTypeCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCreateWorkflowTypeCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCreateWorkflowTypeCountCompleted(Me, New getCreateWorkflowTypeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function forwardWorkflowRequest(ByVal in0 As Integer, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in1 As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in2 As String, ByVal in3 As Integer, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in4 As String) As <System.Xml.Serialization.XmlElementAttribute("out", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("forwardWorkflowRequest", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub forwardWorkflowRequestAsync(ByVal in0 As Integer, ByVal in1 As String, ByVal in2 As String, ByVal in3 As Integer, ByVal in4 As String)
            Me.forwardWorkflowRequestAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub forwardWorkflowRequestAsync(ByVal in0 As Integer, ByVal in1 As String, ByVal in2 As String, ByVal in3 As Integer, ByVal in4 As String, ByVal userState As Object)
            If (Me.forwardWorkflowRequestOperationCompleted Is Nothing) Then
                Me.forwardWorkflowRequestOperationCompleted = AddressOf Me.OnforwardWorkflowRequestOperationCompleted
            End If
            Me.InvokeAsync("forwardWorkflowRequest", New Object() {in0, in1, in2, in3, in4}, Me.forwardWorkflowRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnforwardWorkflowRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.forwardWorkflowRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent forwardWorkflowRequestCompleted(Me, New forwardWorkflowRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub writeWorkflowReadFlag(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in0 As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal in1 As String)
            Me.Invoke("writeWorkflowReadFlag", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub writeWorkflowReadFlagAsync(ByVal in0 As String, ByVal in1 As String)
            Me.writeWorkflowReadFlagAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub writeWorkflowReadFlagAsync(ByVal in0 As String, ByVal in1 As String, ByVal userState As Object)
            If (Me.writeWorkflowReadFlagOperationCompleted Is Nothing) Then
                Me.writeWorkflowReadFlagOperationCompleted = AddressOf Me.OnwriteWorkflowReadFlagOperationCompleted
            End If
            Me.InvokeAsync("writeWorkflowReadFlag", New Object() {in0, in1}, Me.writeWorkflowReadFlagOperationCompleted, userState)
        End Sub
        
        Private Sub OnwriteWorkflowReadFlagOperationCompleted(ByVal arg As Object)
            If (Not (Me.writeWorkflowReadFlagCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent writeWorkflowReadFlagCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getHendledWorkflowRequestCount(ByVal in0 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in1() As String) As <System.Xml.Serialization.XmlElementAttribute("out")> Integer
            Dim results() As Object = Me.Invoke("getHendledWorkflowRequestCount", New Object() {in0, in1})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getHendledWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String)
            Me.getHendledWorkflowRequestCountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getHendledWorkflowRequestCountAsync(ByVal in0 As Integer, ByVal in1() As String, ByVal userState As Object)
            If (Me.getHendledWorkflowRequestCountOperationCompleted Is Nothing) Then
                Me.getHendledWorkflowRequestCountOperationCompleted = AddressOf Me.OngetHendledWorkflowRequestCountOperationCompleted
            End If
            Me.InvokeAsync("getHendledWorkflowRequestCount", New Object() {in0, in1}, Me.getHendledWorkflowRequestCountOperationCompleted, userState)
        End Sub
        
        Private Sub OngetHendledWorkflowRequestCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.getHendledWorkflowRequestCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getHendledWorkflowRequestCountCompleted(Me, New getHendledWorkflowRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="webservices.services.weaver.com.cn", ResponseNamespace:="webservices.services.weaver.com.cn", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCreateWorkflowTypeList(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal in4() As String) As <System.Xml.Serialization.XmlArrayAttribute("out", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservices.workflow.weaver")> WorkflowBaseInfo()
            Dim results() As Object = Me.Invoke("getCreateWorkflowTypeList", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),WorkflowBaseInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowTypeListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String)
            Me.getCreateWorkflowTypeListAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCreateWorkflowTypeListAsync(ByVal in0 As Integer, ByVal in1 As Integer, ByVal in2 As Integer, ByVal in3 As Integer, ByVal in4() As String, ByVal userState As Object)
            If (Me.getCreateWorkflowTypeListOperationCompleted Is Nothing) Then
                Me.getCreateWorkflowTypeListOperationCompleted = AddressOf Me.OngetCreateWorkflowTypeListOperationCompleted
            End If
            Me.InvokeAsync("getCreateWorkflowTypeList", New Object() {in0, in1, in2, in3, in4}, Me.getCreateWorkflowTypeListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCreateWorkflowTypeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCreateWorkflowTypeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCreateWorkflowTypeListCompleted(Me, New getCreateWorkflowTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservices.workflow.weaver")>  _
    Partial Public Class WorkflowRequestInfo
        
        Private canEditField As Boolean
        
        Private canEditFieldSpecified As Boolean
        
        Private canViewField As Boolean
        
        Private canViewFieldSpecified As Boolean
        
        Private createTimeField As String
        
        Private creatorIdField As String
        
        Private creatorNameField As String
        
        Private currentNodeIdField As String
        
        Private currentNodeNameField As String
        
        Private forwardButtonNameField As String
        
        Private lastOperateTimeField As String
        
        Private lastOperatorNameField As String
        
        Private messageTypeField As String
        
        Private mustInputRemarkField As Boolean
        
        Private mustInputRemarkFieldSpecified As Boolean
        
        Private needAffirmanceField As Boolean
        
        Private needAffirmanceFieldSpecified As Boolean
        
        Private receiveTimeField As String
        
        Private rejectButtonNameField As String
        
        Private remarkField As String
        
        Private requestIdField As String
        
        Private requestLevelField As String
        
        Private requestNameField As String
        
        Private statusField As String
        
        Private subbackButtonNameField As String
        
        Private submitButtonNameField As String
        
        Private subnobackButtonNameField As String
        
        Private workflowBaseInfoField As WorkflowBaseInfo
        
        Private workflowDetailTableInfosField() As WorkflowDetailTableInfo
        
        Private workflowHtmlShowField() As String
        
        Private workflowHtmlTempleteField() As String
        
        Private workflowMainTableInfoField As WorkflowMainTableInfo
        
        Private workflowPhrasesField()() As String
        
        Private workflowRequestLogsField() As WorkflowRequestLog
        
        '''<remarks/>
        Public Property canEdit() As Boolean
            Get
                Return Me.canEditField
            End Get
            Set
                Me.canEditField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property canEditSpecified() As Boolean
            Get
                Return Me.canEditFieldSpecified
            End Get
            Set
                Me.canEditFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property canView() As Boolean
            Get
                Return Me.canViewField
            End Get
            Set
                Me.canViewField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property canViewSpecified() As Boolean
            Get
                Return Me.canViewFieldSpecified
            End Get
            Set
                Me.canViewFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property createTime() As String
            Get
                Return Me.createTimeField
            End Get
            Set
                Me.createTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creatorId() As String
            Get
                Return Me.creatorIdField
            End Get
            Set
                Me.creatorIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property creatorName() As String
            Get
                Return Me.creatorNameField
            End Get
            Set
                Me.creatorNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property currentNodeId() As String
            Get
                Return Me.currentNodeIdField
            End Get
            Set
                Me.currentNodeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property currentNodeName() As String
            Get
                Return Me.currentNodeNameField
            End Get
            Set
                Me.currentNodeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property forwardButtonName() As String
            Get
                Return Me.forwardButtonNameField
            End Get
            Set
                Me.forwardButtonNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastOperateTime() As String
            Get
                Return Me.lastOperateTimeField
            End Get
            Set
                Me.lastOperateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property lastOperatorName() As String
            Get
                Return Me.lastOperatorNameField
            End Get
            Set
                Me.lastOperatorNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property messageType() As String
            Get
                Return Me.messageTypeField
            End Get
            Set
                Me.messageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mustInputRemark() As Boolean
            Get
                Return Me.mustInputRemarkField
            End Get
            Set
                Me.mustInputRemarkField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property mustInputRemarkSpecified() As Boolean
            Get
                Return Me.mustInputRemarkFieldSpecified
            End Get
            Set
                Me.mustInputRemarkFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property needAffirmance() As Boolean
            Get
                Return Me.needAffirmanceField
            End Get
            Set
                Me.needAffirmanceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property needAffirmanceSpecified() As Boolean
            Get
                Return Me.needAffirmanceFieldSpecified
            End Get
            Set
                Me.needAffirmanceFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property receiveTime() As String
            Get
                Return Me.receiveTimeField
            End Get
            Set
                Me.receiveTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property rejectButtonName() As String
            Get
                Return Me.rejectButtonNameField
            End Get
            Set
                Me.rejectButtonNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property remark() As String
            Get
                Return Me.remarkField
            End Get
            Set
                Me.remarkField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property requestId() As String
            Get
                Return Me.requestIdField
            End Get
            Set
                Me.requestIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property requestLevel() As String
            Get
                Return Me.requestLevelField
            End Get
            Set
                Me.requestLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property requestName() As String
            Get
                Return Me.requestNameField
            End Get
            Set
                Me.requestNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subbackButtonName() As String
            Get
                Return Me.subbackButtonNameField
            End Get
            Set
                Me.subbackButtonNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property submitButtonName() As String
            Get
                Return Me.submitButtonNameField
            End Get
            Set
                Me.submitButtonNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property subnobackButtonName() As String
            Get
                Return Me.subnobackButtonNameField
            End Get
            Set
                Me.subnobackButtonNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property workflowBaseInfo() As WorkflowBaseInfo
            Get
                Return Me.workflowBaseInfoField
            End Get
            Set
                Me.workflowBaseInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)>  _
        Public Property workflowDetailTableInfos() As WorkflowDetailTableInfo()
            Get
                Return Me.workflowDetailTableInfosField
            End Get
            Set
                Me.workflowDetailTableInfosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="webservices.services.weaver.com.cn")>  _
        Public Property workflowHtmlShow() As String()
            Get
                Return Me.workflowHtmlShowField
            End Get
            Set
                Me.workflowHtmlShowField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="webservices.services.weaver.com.cn")>  _
        Public Property workflowHtmlTemplete() As String()
            Get
                Return Me.workflowHtmlTempleteField
            End Get
            Set
                Me.workflowHtmlTempleteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property workflowMainTableInfo() As WorkflowMainTableInfo
            Get
                Return Me.workflowMainTableInfoField
            End Get
            Set
                Me.workflowMainTableInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString", [Namespace]:="webservices.services.weaver.com.cn"),  _
         System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="webservices.services.weaver.com.cn", NestingLevel:=1)>  _
        Public Property workflowPhrases() As String()()
            Get
                Return Me.workflowPhrasesField
            End Get
            Set
                Me.workflowPhrasesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)>  _
        Public Property workflowRequestLogs() As WorkflowRequestLog()
            Get
                Return Me.workflowRequestLogsField
            End Get
            Set
                Me.workflowRequestLogsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservices.workflow.weaver")>  _
    Partial Public Class WorkflowBaseInfo
        
        Private workflowIdField As String
        
        Private workflowNameField As String
        
        Private workflowTypeIdField As String
        
        Private workflowTypeNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property workflowId() As String
            Get
                Return Me.workflowIdField
            End Get
            Set
                Me.workflowIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property workflowName() As String
            Get
                Return Me.workflowNameField
            End Get
            Set
                Me.workflowNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property workflowTypeId() As String
            Get
                Return Me.workflowTypeIdField
            End Get
            Set
                Me.workflowTypeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property workflowTypeName() As String
            Get
                Return Me.workflowTypeNameField
            End Get
            Set
                Me.workflowTypeNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservices.workflow.weaver")>  _
    Partial Public Class WorkflowRequestLog
        
        Private agentorField As String
        
        Private agentorDeptField As String
        
        Private annexDocHtmlsField As String
        
        Private idField As String
        
        Private nodeIdField As String
        
        Private nodeNameField As String
        
        Private operateDateField As String
        
        Private operateTimeField As String
        
        Private operateTypeField As String
        
        Private operatorDeptField As String
        
        Private operatorIdField As String
        
        Private operatorNameField As String
        
        Private operatorSignField As String
        
        Private receivedPersonsField As String
        
        Private remarkField As String
        
        Private remarkSignField As String
        
        Private signDocHtmlsField As String
        
        Private signWorkFlowHtmlsField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property agentor() As String
            Get
                Return Me.agentorField
            End Get
            Set
                Me.agentorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property agentorDept() As String
            Get
                Return Me.agentorDeptField
            End Get
            Set
                Me.agentorDeptField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property annexDocHtmls() As String
            Get
                Return Me.annexDocHtmlsField
            End Get
            Set
                Me.annexDocHtmlsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nodeId() As String
            Get
                Return Me.nodeIdField
            End Get
            Set
                Me.nodeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property nodeName() As String
            Get
                Return Me.nodeNameField
            End Get
            Set
                Me.nodeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operateDate() As String
            Get
                Return Me.operateDateField
            End Get
            Set
                Me.operateDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operateTime() As String
            Get
                Return Me.operateTimeField
            End Get
            Set
                Me.operateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operateType() As String
            Get
                Return Me.operateTypeField
            End Get
            Set
                Me.operateTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operatorDept() As String
            Get
                Return Me.operatorDeptField
            End Get
            Set
                Me.operatorDeptField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operatorId() As String
            Get
                Return Me.operatorIdField
            End Get
            Set
                Me.operatorIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operatorName() As String
            Get
                Return Me.operatorNameField
            End Get
            Set
                Me.operatorNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property operatorSign() As String
            Get
                Return Me.operatorSignField
            End Get
            Set
                Me.operatorSignField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property receivedPersons() As String
            Get
                Return Me.receivedPersonsField
            End Get
            Set
                Me.receivedPersonsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property remark() As String
            Get
                Return Me.remarkField
            End Get
            Set
                Me.remarkField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property remarkSign() As String
            Get
                Return Me.remarkSignField
            End Get
            Set
                Me.remarkSignField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property signDocHtmls() As String
            Get
                Return Me.signDocHtmlsField
            End Get
            Set
                Me.signDocHtmlsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property signWorkFlowHtmls() As String
            Get
                Return Me.signWorkFlowHtmlsField
            End Get
            Set
                Me.signWorkFlowHtmlsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservices.workflow.weaver")>  _
    Partial Public Class WorkflowMainTableInfo
        
        Private requestRecordsField() As WorkflowRequestTableRecord
        
        Private tableDBNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)>  _
        Public Property requestRecords() As WorkflowRequestTableRecord()
            Get
                Return Me.requestRecordsField
            End Get
            Set
                Me.requestRecordsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property tableDBName() As String
            Get
                Return Me.tableDBNameField
            End Get
            Set
                Me.tableDBNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservices.workflow.weaver")>  _
    Partial Public Class WorkflowRequestTableRecord
        
        Private recordOrderField As Integer
        
        Private recordOrderFieldSpecified As Boolean
        
        Private workflowRequestTableFieldsField() As WorkflowRequestTableField
        
        '''<remarks/>
        Public Property recordOrder() As Integer
            Get
                Return Me.recordOrderField
            End Get
            Set
                Me.recordOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property recordOrderSpecified() As Boolean
            Get
                Return Me.recordOrderFieldSpecified
            End Get
            Set
                Me.recordOrderFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)>  _
        Public Property workflowRequestTableFields() As WorkflowRequestTableField()
            Get
                Return Me.workflowRequestTableFieldsField
            End Get
            Set
                Me.workflowRequestTableFieldsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservices.workflow.weaver")>  _
    Partial Public Class WorkflowRequestTableField
        
        Private browserurlField As String
        
        Private editField As Boolean
        
        Private editFieldSpecified As Boolean
        
        Private fieldDBTypeField As String
        
        Private fieldFormNameField As String
        
        Private fieldHtmlTypeField As String
        
        Private fieldIdField As String
        
        Private fieldNameField As String
        
        Private fieldOrderField As Integer
        
        Private fieldOrderFieldSpecified As Boolean
        
        Private fieldShowNameField As String
        
        Private fieldShowValueField As String
        
        Private fieldTypeField As String
        
        Private fieldValueField As String
        
        Private filedHtmlShowField As String
        
        Private mandField As Boolean
        
        Private mandFieldSpecified As Boolean
        
        Private selectnamesField() As String
        
        Private selectvaluesField() As String
        
        Private viewField As Boolean
        
        Private viewFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property browserurl() As String
            Get
                Return Me.browserurlField
            End Get
            Set
                Me.browserurlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property edit() As Boolean
            Get
                Return Me.editField
            End Get
            Set
                Me.editField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property editSpecified() As Boolean
            Get
                Return Me.editFieldSpecified
            End Get
            Set
                Me.editFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldDBType() As String
            Get
                Return Me.fieldDBTypeField
            End Get
            Set
                Me.fieldDBTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldFormName() As String
            Get
                Return Me.fieldFormNameField
            End Get
            Set
                Me.fieldFormNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldHtmlType() As String
            Get
                Return Me.fieldHtmlTypeField
            End Get
            Set
                Me.fieldHtmlTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldId() As String
            Get
                Return Me.fieldIdField
            End Get
            Set
                Me.fieldIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldName() As String
            Get
                Return Me.fieldNameField
            End Get
            Set
                Me.fieldNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fieldOrder() As Integer
            Get
                Return Me.fieldOrderField
            End Get
            Set
                Me.fieldOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property fieldOrderSpecified() As Boolean
            Get
                Return Me.fieldOrderFieldSpecified
            End Get
            Set
                Me.fieldOrderFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldShowName() As String
            Get
                Return Me.fieldShowNameField
            End Get
            Set
                Me.fieldShowNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldShowValue() As String
            Get
                Return Me.fieldShowValueField
            End Get
            Set
                Me.fieldShowValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldType() As String
            Get
                Return Me.fieldTypeField
            End Get
            Set
                Me.fieldTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fieldValue() As String
            Get
                Return Me.fieldValueField
            End Get
            Set
                Me.fieldValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property filedHtmlShow() As String
            Get
                Return Me.filedHtmlShowField
            End Get
            Set
                Me.filedHtmlShowField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mand() As Boolean
            Get
                Return Me.mandField
            End Get
            Set
                Me.mandField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property mandSpecified() As Boolean
            Get
                Return Me.mandFieldSpecified
            End Get
            Set
                Me.mandFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="webservices.services.weaver.com.cn")>  _
        Public Property selectnames() As String()
            Get
                Return Me.selectnamesField
            End Get
            Set
                Me.selectnamesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="webservices.services.weaver.com.cn")>  _
        Public Property selectvalues() As String()
            Get
                Return Me.selectvaluesField
            End Get
            Set
                Me.selectvaluesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property view() As Boolean
            Get
                Return Me.viewField
            End Get
            Set
                Me.viewField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property viewSpecified() As Boolean
            Get
                Return Me.viewFieldSpecified
            End Get
            Set
                Me.viewFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservices.workflow.weaver")>  _
    Partial Public Class WorkflowDetailTableInfo
        
        Private tableDBNameField As String
        
        Private tableFieldNameField() As String
        
        Private tableTitleField As String
        
        Private workflowRequestTableRecordsField() As WorkflowRequestTableRecord
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property tableDBName() As String
            Get
                Return Me.tableDBNameField
            End Get
            Set
                Me.tableDBNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="webservices.services.weaver.com.cn")>  _
        Public Property tableFieldName() As String()
            Get
                Return Me.tableFieldNameField
            End Get
            Set
                Me.tableFieldNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property tableTitle() As String
            Get
                Return Me.tableTitleField
            End Get
            Set
                Me.tableTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)>  _
        Public Property workflowRequestTableRecords() As WorkflowRequestTableRecord()
            Get
                Return Me.workflowRequestTableRecordsField
            End Get
            Set
                Me.workflowRequestTableRecordsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub deleteRequestCompletedEventHandler(ByVal sender As Object, ByVal e As deleteRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class deleteRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub submitWorkflowRequestCompletedEventHandler(ByVal sender As Object, ByVal e As submitWorkflowRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitWorkflowRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getToDoWorkflowRequestCountCompletedEventHandler(ByVal sender As Object, ByVal e As getToDoWorkflowRequestCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getToDoWorkflowRequestCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub doCreateWorkflowRequestCompletedEventHandler(ByVal sender As Object, ByVal e As doCreateWorkflowRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class doCreateWorkflowRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getCreateWorkflowRequestInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getCreateWorkflowRequestInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCreateWorkflowRequestInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getAllWorkflowRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As getAllWorkflowRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllWorkflowRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getMyWorkflowRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As getMyWorkflowRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMyWorkflowRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getProcessedWorkflowRequestCountCompletedEventHandler(ByVal sender As Object, ByVal e As getProcessedWorkflowRequestCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProcessedWorkflowRequestCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getWorkflowRequestCompletedEventHandler(ByVal sender As Object, ByVal e As getWorkflowRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getWorkflowRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getLeaveDaysCompletedEventHandler(ByVal sender As Object, ByVal e As getLeaveDaysCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLeaveDaysCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getWorkflowRequest4splitCompletedEventHandler(ByVal sender As Object, ByVal e As getWorkflowRequest4splitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getWorkflowRequest4splitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getHendledWorkflowRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As getHendledWorkflowRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getHendledWorkflowRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getCreateWorkflowCountCompletedEventHandler(ByVal sender As Object, ByVal e As getCreateWorkflowCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCreateWorkflowCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getToDoWorkflowRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As getToDoWorkflowRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getToDoWorkflowRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getWorkflowNewFlagCompletedEventHandler(ByVal sender As Object, ByVal e As getWorkflowNewFlagCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getWorkflowNewFlagCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getCCWorkflowRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As getCCWorkflowRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCCWorkflowRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getCreateWorkflowListCompletedEventHandler(ByVal sender As Object, ByVal e As getCreateWorkflowListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCreateWorkflowListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowBaseInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowBaseInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getCCWorkflowRequestCountCompletedEventHandler(ByVal sender As Object, ByVal e As getCCWorkflowRequestCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCCWorkflowRequestCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getAllWorkflowRequestCountCompletedEventHandler(ByVal sender As Object, ByVal e As getAllWorkflowRequestCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllWorkflowRequestCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getWorkflowRequestLogsCompletedEventHandler(ByVal sender As Object, ByVal e As getWorkflowRequestLogsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getWorkflowRequestLogsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestLog()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestLog())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getMyWorkflowRequestCountCompletedEventHandler(ByVal sender As Object, ByVal e As getMyWorkflowRequestCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMyWorkflowRequestCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getProcessedWorkflowRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As getProcessedWorkflowRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProcessedWorkflowRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowRequestInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowRequestInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getCreateWorkflowTypeCountCompletedEventHandler(ByVal sender As Object, ByVal e As getCreateWorkflowTypeCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCreateWorkflowTypeCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub forwardWorkflowRequestCompletedEventHandler(ByVal sender As Object, ByVal e As forwardWorkflowRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class forwardWorkflowRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub writeWorkflowReadFlagCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getHendledWorkflowRequestCountCompletedEventHandler(ByVal sender As Object, ByVal e As getHendledWorkflowRequestCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getHendledWorkflowRequestCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getCreateWorkflowTypeListCompletedEventHandler(ByVal sender As Object, ByVal e As getCreateWorkflowTypeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCreateWorkflowTypeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkflowBaseInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkflowBaseInfo())
            End Get
        End Property
    End Class
End Namespace
